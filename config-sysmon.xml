<?xml version="1.0" encoding="utf-8"?>
<Sysmon schemaversion="4.82">

    <!-- References: -->
    <!-- SwiftOnSecurity Sysmon Config: https://github.com/SwiftOnSecurity/sysmon-config -->
    <!-- Mimikatz detection techniques: https://attack.mitre.org/techniques/T1003/001/ -->
    <!-- Sysmon Event Filtering Guide: https://medium.com/@cyb3rops/sysmon-event-filtering-guide-1c9bcd4d4f27 -->
    <!-- ADSecurity Mimikatz Detection: https://adsecurity.org/?page_id=1821 -->
    <!-- scip AG - Detecting Attacks with MITRE ATT&CK: https://www.scip.ch/en/?labs.20190711 -->
    <!-- JPCERT/CC - Remote Login via Mimikatz: https://jpcertcc.github.io/ToolAnalysisResultSheet/details/RemoteLogin-Mimikatz.htm -->
    <!-- Netwrix - Detecting Pass-the-Hash Attacks: https://blog.netwrix.com/2021/11/30/how-to-detect-pass-the-hash-attacks/ -->

    <EventFiltering>
        
        <!-- General Process Creation Monitoring (SwiftOnSecurity) -->
        <ProcessCreate onmatch="include">
            <CommandLine condition="contains">-nop</CommandLine>
            <CommandLine condition="contains">-w hidden</CommandLine>
            <CommandLine condition="contains">-enc</CommandLine>
            <CommandLine condition="contains">powershell</CommandLine>
        </ProcessCreate>

        <!-- Targeted Mimikatz Command-Line Detection (Enhanced) -->
        <ProcessCreate onmatch="include">
            <CommandLine condition="contains">mimikatz</CommandLine>
            <CommandLine condition="contains">sekurlsa::logonpasswords</CommandLine>
            <CommandLine condition="contains">lsadump::dcsync</CommandLine>
            <CommandLine condition="contains">privilege::debug</CommandLine>
            <CommandLine condition="contains">sekurlsa::pth</CommandLine>
            <CommandLine condition="contains">token::elevate</CommandLine>
        </ProcessCreate>

        <!-- Detect renamed Mimikatz variants (New) -->
        <ProcessCreate onmatch="include">
            <CommandLine condition="contains">mimika</CommandLine>
            <CommandLine condition="contains">mim.exe</CommandLine>
            <CommandLine condition="contains">mkat</CommandLine>
        </ProcessCreate>

        <!-- Detect potential DCSync behavior (ADSecurity) -->
        <ProcessCreate onmatch="include">
            <CommandLine condition="contains">lsadump::dcsync</CommandLine>
            <CommandLine condition="contains">Invoke-DCSync</CommandLine>
        </ProcessCreate>

        <!-- Detect Pass-the-Hash and Pass-the-Ticket activities (ADSecurity & Netwrix) -->
        <ProcessCreate onmatch="include">
            <CommandLine condition="contains">sekurlsa::pth</CommandLine>
            <CommandLine condition="contains">kerberos::ptt</CommandLine>
        </ProcessCreate>

        <!-- LSASS Access Monitoring (SwiftOnSecurity & JPCERT/CC) -->
        <ProcessAccess onmatch="include">
            <TargetImage condition="contains">lsass.exe</TargetImage>
            <SourceImage condition="contains">mimikatz.exe</SourceImage>
            <SourceImage condition="contains">powershell.exe</SourceImage>
        </ProcessAccess>

        <!-- Enhance LSASS Monitoring for Process Handle Manipulation (New) -->
        <ProcessAccess onmatch="include">
            <TargetImage condition="contains">lsass.exe</TargetImage>
            <GrantedAccess condition="contains">0x1FFFFF</GrantedAccess> <!-- Full Access -->
        </ProcessAccess>

        <!-- Detect processes accessing LSASS (ADSecurity, JPCERT/CC & Netwrix) -->
        <ProcessAccess onmatch="include">
            <TargetImage condition="contains">lsass.exe</TargetImage>
            <GrantedAccess condition="contains">0x1410</GrantedAccess> <!-- PROCESS_VM_READ and PROCESS_QUERY_INFORMATION -->
        </ProcessAccess>

        <!-- Detect LSASS memory dumping via common tools (New) -->
        <ProcessCreate onmatch="include">
            <CommandLine condition="contains">taskmgr</CommandLine>
            <CommandLine condition="contains">procdump</CommandLine>
            <CommandLine condition="contains">dumpcap</CommandLine>
        </ProcessCreate>

        <!-- Monitor Remote Login Activity (JPCERT/CC) -->
        <NetworkConnect onmatch="include">
            <Image condition="contains">wmic.exe</Image>
            <Image condition="contains">cmd.exe</Image>
            <Image condition="contains">powershell.exe</Image>
        </NetworkConnect>

        <!-- Image Load Monitoring (Combination) -->
        <ImageLoad onmatch="include">
            <ImageLoaded condition="contains">mimidrv.sys</ImageLoaded>  <!-- Detects Mimikatz driver -->
            <ImageLoaded condition="contains">dbghelp.dll</ImageLoaded>  <!-- Commonly abused by Mimikatz -->
            <ImageLoaded condition="contains">wdigest.dll</ImageLoaded>  <!-- Credential dumping indicator -->
        </ImageLoad>

        <!-- Registry Monitoring for Credential Dumping -->
        <RegistryEvent onmatch="include">
            <TargetObject condition="contains">\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest</TargetObject>
            <Details condition="contains">UseLogonCredential</Details>
        </RegistryEvent>

        <!-- Detect direct NTDS.dit and SAM database access (New) -->
        <FileCreate onmatch="include">
            <TargetFilename condition="contains">ntds.dit</TargetFilename>
        </FileCreate>
        <RegistryEvent onmatch="include">
            <TargetObject condition="contains">HKLM\SYSTEM\CurrentControlSet\Services\NTDS\Parameters</TargetObject>
        </RegistryEvent>

        <!-- Detect scheduled task or service creation for persistence (New) -->
        <ProcessCreate onmatch="include">
            <CommandLine condition="contains">schtasks /create</CommandLine>
            <CommandLine condition="contains">sc create</CommandLine>
        </ProcessCreate>

        <!-- Detect dumping of LSA secrets (New) -->
        <RegistryEvent onmatch="include">
            <TargetObject condition="contains">\SYSTEM\CurrentControlSet\Services\NTDS\Parameters\DSA Computer</TargetObject>
        </RegistryEvent>

        <!-- Detect PowerShell downloading scripts from the web (scip AG) -->
        <ProcessCreate onmatch="include">
            <CommandLine condition="contains">Invoke-Expression</CommandLine>
            <CommandLine condition="contains">IEX</CommandLine>
            <CommandLine condition="contains">DownloadString</CommandLine>
            <CommandLine condition="contains">Net.WebClient</CommandLine>
        </ProcessCreate>

        <!-- Detect suspicious PowerShell script execution (scip AG) -->
        <ProcessCreate onmatch="include">
            <CommandLine condition="contains">powershell</CommandLine>
            <CommandLine condition="contains">-ExecutionPolicy Bypass</CommandLine>
            <CommandLine condition="contains">-File</CommandLine>
            <CommandLine condition="contains">.ps1</CommandLine>
        </ProcessCreate>

        <RuleGroup name="Detect Mimikatz and In-Memory Attacks" groupRelation="or">
            <ImageLoad onmatch="include">
                <ImageLoaded condition="contains">vaultcli.dll</ImageLoaded>
                <ImageLoaded condition="contains">wlanapi.dll</ImageLoaded>
                <Image condition="contains">powershell.exe</Image>
                <Image condition="contains">pwsh.exe</Image>
                <Image condition="contains">wscript.exe</Image>
                <Image condition="contains">cscript.exe</Image>
            </ImageLoad>
        </RuleGroup>

    </EventFiltering>
</Sysmon>
